// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

console.log("PRODUCTION ENV CHECK:", { 
  SUPABASE_URL: import.meta.env.VITE_SUPABASE_URL ? 'Present' : 'Missing',
  SUPABASE_KEY: import.meta.env.VITE_SUPABASE_ANON_KEY ? 'Present' : 'Missing'
});

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

console.log("ENV CHECK:", { SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY });

const createMockClient = () => {
  console.warn('Missing Supabase environment variables. Using mock client.');
  return {
    auth: {
      signInWithPassword: async () => ({ data: null, error: { message: 'Authentication not configured' } }),
      signUp: async () => ({ data: null, error: { message: 'Authentication not configured' } }),
      signOut: async () => ({ error: null }),
      getSession: async () => ({ data: { session: null }, error: null }),
      onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } } }),
    },
    from: () => ({
      select: () => ({ limit: () => Promise.resolve({ data: [], error: null }) }),
    }),
  };
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    autoRefreshToken: true,
    persistSession: true,
    detectSessionInUrl: true
  },
  global: {
    headers: {
      'Accept': 'application/json'
    }
  }
});
