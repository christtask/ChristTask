// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

console.log("PRODUCTION ENV CHECK:", { 
  SUPABASE_URL: import.meta.env.VITE_SUPABASE_URL ? 'Present' : 'Missing',
  SUPABASE_KEY: import.meta.env.VITE_SUPABASE_ANON_KEY ? 'Present' : 'Missing'
});

const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

console.log("ENV CHECK:", { 
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY: SUPABASE_PUBLISHABLE_KEY ? 'Present' : 'Missing',
  SUPABASE_URL_LENGTH: SUPABASE_URL?.length,
  SUPABASE_KEY_LENGTH: SUPABASE_PUBLISHABLE_KEY?.length
});

// Debug the actual values (first 20 chars for security)
console.log("ACTUAL VALUES:", {
  SUPABASE_URL: SUPABASE_URL?.substring(0, 20) + '...',
  SUPABASE_KEY_START: SUPABASE_PUBLISHABLE_KEY?.substring(0, 20) + '...'
});

// Validate environment variables
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error('❌ CRITICAL: Missing Supabase environment variables!');
  console.error('Please set VITE_SUPABASE_URL and VITE_SUPABASE_ANON_KEY in your environment.');
  console.error('This will cause authentication and database operations to fail.');
}

const createMockClient = () => {
  console.warn('⚠️ Missing Supabase environment variables. Using mock client.');
  console.warn('Authentication and database operations will not work.');
  return {
    auth: {
      signInWithPassword: async () => ({ 
        data: null, 
        error: { 
          message: 'Authentication not configured - missing environment variables' 
        } 
      }),
      signUp: async () => ({ 
        data: null, 
        error: { 
          message: 'Authentication not configured - missing environment variables' 
        } 
      }),
      signOut: async () => ({ error: null }),
      getSession: async () => ({ data: { session: null }, error: null }),
      onAuthStateChange: () => ({ data: { subscription: { unsubscribe: () => {} } } }),
    },
    from: () => ({
      select: () => ({ 
        limit: () => Promise.resolve({ 
          data: [], 
          error: { message: 'Database not configured - missing environment variables' } 
        }) 
      }),
    }),
  };
};

// Use mock client if environment variables are missing
const useMockClient = !SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY;

console.log("SUPABASE CLIENT DECISION:", {
  useMockClient,
  hasUrl: !!SUPABASE_URL,
  hasKey: !!SUPABASE_PUBLISHABLE_KEY,
  reason: useMockClient ? 'Missing environment variables' : 'Using real client'
});

export const supabase = useMockClient
  ? createMockClient()
  : createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
      auth: {
        autoRefreshToken: true,
        persistSession: true,
        detectSessionInUrl: true
      },
      global: {
        headers: {
          'Accept': 'application/json'
        }
      }
    });
